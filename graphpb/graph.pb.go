// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: pbs/graph.proto

package graphpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pbs_graph_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Node) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Date int64  `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_pbs_graph_proto_rawDescGZIP(), []int{1}
}

func (x *Info) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Info) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

type GraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To    string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Infos *Info  `protobuf:"bytes,3,opt,name=infos,proto3" json:"infos,omitempty"`
}

func (x *GraphRequest) Reset() {
	*x = GraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphRequest) ProtoMessage() {}

func (x *GraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphRequest.ProtoReflect.Descriptor instead.
func (*GraphRequest) Descriptor() ([]byte, []int) {
	return file_pbs_graph_proto_rawDescGZIP(), []int{2}
}

func (x *GraphRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GraphRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GraphRequest) GetInfos() *Info {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Node  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GraphResponse) Reset() {
	*x = GraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphResponse) ProtoMessage() {}

func (x *GraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphResponse.ProtoReflect.Descriptor instead.
func (*GraphResponse) Descriptor() ([]byte, []int) {
	return file_pbs_graph_proto_rawDescGZIP(), []int{3}
}

func (x *GraphResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GraphResponse) GetData() *Node {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pbs_graph_proto protoreflect.FileDescriptor

var file_pbs_graph_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x22, 0x3a, 0x0a, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x57, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4c, 0x0a,
	0x0d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x90, 0x01, 0x0a, 0x0c,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x42, 0x0b,
	0x5a, 0x09, 0x2e, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pbs_graph_proto_rawDescOnce sync.Once
	file_pbs_graph_proto_rawDescData = file_pbs_graph_proto_rawDesc
)

func file_pbs_graph_proto_rawDescGZIP() []byte {
	file_pbs_graph_proto_rawDescOnce.Do(func() {
		file_pbs_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbs_graph_proto_rawDescData)
	})
	return file_pbs_graph_proto_rawDescData
}

var file_pbs_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pbs_graph_proto_goTypes = []interface{}{
	(*Node)(nil),          // 0: graphpb.Node
	(*Info)(nil),          // 1: graphpb.Info
	(*GraphRequest)(nil),  // 2: graphpb.GraphRequest
	(*GraphResponse)(nil), // 3: graphpb.GraphResponse
}
var file_pbs_graph_proto_depIdxs = []int32{
	1, // 0: graphpb.GraphRequest.infos:type_name -> graphpb.Info
	0, // 1: graphpb.GraphResponse.data:type_name -> graphpb.Node
	2, // 2: graphpb.GraphService.Register:input_type -> graphpb.GraphRequest
	2, // 3: graphpb.GraphService.RegisterStream:input_type -> graphpb.GraphRequest
	3, // 4: graphpb.GraphService.Register:output_type -> graphpb.GraphResponse
	3, // 5: graphpb.GraphService.RegisterStream:output_type -> graphpb.GraphResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pbs_graph_proto_init() }
func file_pbs_graph_proto_init() {
	if File_pbs_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbs_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbs_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pbs_graph_proto_goTypes,
		DependencyIndexes: file_pbs_graph_proto_depIdxs,
		MessageInfos:      file_pbs_graph_proto_msgTypes,
	}.Build()
	File_pbs_graph_proto = out.File
	file_pbs_graph_proto_rawDesc = nil
	file_pbs_graph_proto_goTypes = nil
	file_pbs_graph_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GraphServiceClient is the client API for GraphService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GraphServiceClient interface {
	Register(ctx context.Context, in *GraphRequest, opts ...grpc.CallOption) (*GraphResponse, error)
	RegisterStream(ctx context.Context, opts ...grpc.CallOption) (GraphService_RegisterStreamClient, error)
}

type graphServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGraphServiceClient(cc grpc.ClientConnInterface) GraphServiceClient {
	return &graphServiceClient{cc}
}

func (c *graphServiceClient) Register(ctx context.Context, in *GraphRequest, opts ...grpc.CallOption) (*GraphResponse, error) {
	out := new(GraphResponse)
	err := c.cc.Invoke(ctx, "/graphpb.GraphService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphServiceClient) RegisterStream(ctx context.Context, opts ...grpc.CallOption) (GraphService_RegisterStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GraphService_serviceDesc.Streams[0], "/graphpb.GraphService/RegisterStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &graphServiceRegisterStreamClient{stream}
	return x, nil
}

type GraphService_RegisterStreamClient interface {
	Send(*GraphRequest) error
	CloseAndRecv() (*GraphResponse, error)
	grpc.ClientStream
}

type graphServiceRegisterStreamClient struct {
	grpc.ClientStream
}

func (x *graphServiceRegisterStreamClient) Send(m *GraphRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *graphServiceRegisterStreamClient) CloseAndRecv() (*GraphResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GraphResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GraphServiceServer is the server API for GraphService service.
type GraphServiceServer interface {
	Register(context.Context, *GraphRequest) (*GraphResponse, error)
	RegisterStream(GraphService_RegisterStreamServer) error
}

// UnimplementedGraphServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGraphServiceServer struct {
}

func (*UnimplementedGraphServiceServer) Register(context.Context, *GraphRequest) (*GraphResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedGraphServiceServer) RegisterStream(GraphService_RegisterStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterStream not implemented")
}

func RegisterGraphServiceServer(s *grpc.Server, srv GraphServiceServer) {
	s.RegisterService(&_GraphService_serviceDesc, srv)
}

func _GraphService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GraphRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graphpb.GraphService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphServiceServer).Register(ctx, req.(*GraphRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphService_RegisterStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GraphServiceServer).RegisterStream(&graphServiceRegisterStreamServer{stream})
}

type GraphService_RegisterStreamServer interface {
	SendAndClose(*GraphResponse) error
	Recv() (*GraphRequest, error)
	grpc.ServerStream
}

type graphServiceRegisterStreamServer struct {
	grpc.ServerStream
}

func (x *graphServiceRegisterStreamServer) SendAndClose(m *GraphResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *graphServiceRegisterStreamServer) Recv() (*GraphRequest, error) {
	m := new(GraphRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GraphService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "graphpb.GraphService",
	HandlerType: (*GraphServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _GraphService_Register_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterStream",
			Handler:       _GraphService_RegisterStream_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pbs/graph.proto",
}
